############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

#-------------------------#
#   PERSONAL_MACROS       #
#-------------------------#

[include macros.cfg]


# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine

# [extruder]
# control: pid
# pid_kp: 22.392
# pid_ki: 0.995
# pid_kd: 125.954


# [heater_bed]
# control: pid
# pid_kp: 54.670
# pid_ki: 2.567
# pid_kd: 291.117



#----------------------------#
#   X & Y MOTORS DIRECTION   #
#----------------------------#

[stepper_x]
dir_pin: !X_DIR

[stepper_y]
dir_pin: !Y_DIR




#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.


[stepper_z]
dir_pin: !Z_DIR

[stepper_z1]
dir_pin: Z1_DIR

[stepper_z2]
dir_pin: !Z2_DIR

[stepper_z3]
dir_pin: Z3_DIR



#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.
[probe]
pin: ^toolhead: PB5
z_offset: 2.845



#-------------------------#
#   Bed Mesh              #
#-------------------------#

[bed_mesh]
# speed: 200
# horizontal_move_z: 10
# mesh_min: 20,0
# mesh_max: 330,290
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2
zero_reference_position: 175, 175




#-------------------------#
#   Disco Lights          #
#-------------------------#

##Disco lights setup

[neopixel caselight]
pin: LIGHT_NEOPIXEL
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 50
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). The default is
#   GRB.
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5
# initial_WHITE: 0.0
#   See the "led" section for information on these parameters.




